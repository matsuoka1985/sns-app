version: '3.8'

services:
  nginx:
    image: nginx:1.21.1-alpine
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./backend:/var/www/  # Laravel
    depends_on:
      - php

  php:
    build: ./docker/php
    volumes:
      - ./backend:/var/www/
    depends_on:
      - mysql
      - redis



  mysql:
    image: mysql:8.0.37
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel_db
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: laravel_pass
    command: mysqld --default-authentication-plugin=mysql_native_password
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf

  redis:
    image: redis:7.0.11-alpine
    platform: linux/arm64
    ports:
      - "6379:6379"
    volumes:
      - ./docker/redis/data:/data
    command: redis-server --appendonly yes

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=mysql
      - PMA_USER=laravel_user
      - PMA_PASSWORD=laravel_pass
    depends_on:
      - mysql
    ports:
      - 8080:80

  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: mailhog
    ports:
      - "8025:8025"
      - "1025:1025"

  nuxt:
    build: ./docker/nuxt
    volumes:
      - ./frontend:/app
    ports:
      - 3000:3000
    tty: true
    command: sh -c "[ ! -f .env ] && cp .env.example .env || true; npm install && npm run dev"
